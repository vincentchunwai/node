import { Adapter } from '@node-escpos/adapter';
import { Device, OutEndpoint, InEndpoint } from 'usb';

declare type TDevice = Device;
declare class USBAdapter extends Adapter<[]> {
    device: TDevice | null;
    endpoint: OutEndpoint | null;
    deviceToPcEndpoint: InEndpoint | null;
    constructor(vid?: number | TDevice, pid?: number);
    private detachDevice;
    static on(event: "attach" | "detach", listener: (device: TDevice) => void): void;
    static isPrinter(device: TDevice): boolean;
    static findPrinter(): Device[];
    static getDevice(vid: number, pid: number): Promise<unknown>;
    static getDeviceBySerial(serialNumber: string): Promise<unknown>;
    open(callback?: ((error: Error | null) => void) | undefined): this;
    read(callback?: ((data: Buffer) => void) | undefined): void;
    write(data: string | Buffer, callback?: ((error: Error | null) => void) | undefined): this;
    close(callback?: ((error: Error | null) => void) | undefined): this;
}

export { TDevice, USBAdapter as default };
